/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.jetsonfuzz.java.gui;

import com.jetsonfuzz.java.dw.Database;
import com.jetsonfuzz.java.dw.SqlTable;
import com.jetsonfuzz.java.dw.Warehouse;
import com.jetsonfuzz.java.main.Constants;
import com.jetsonfuzz.java.main.Properties;
import com.jetsonfuzz.java.main.Util;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author dking
 */
public class Launcher extends JFrame {
    private Properties _props = null;
    private Database _db = null;
    private Warehouse _dw = null;
    
    /**
     * Creates new form Launcher
     * @param props
     */
    public Launcher(Properties props) {
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        initComponents();
        
        this._props = props;
        this._db = new Database(_props);
        this._dw = new Warehouse(_props, _db);
    }

    public void cleanup() {
        this._db.disconnect();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnQuit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        linkConnect = new com.jetsonfuzz.java.gui.common.JLinkButton();
        linkInitialize = new com.jetsonfuzz.java.gui.common.JLinkButton();
        linkFactTable = new com.jetsonfuzz.java.gui.common.JLinkButton();
        linkDimensional = new com.jetsonfuzz.java.gui.common.JLinkButton();
        linkReview = new com.jetsonfuzz.java.gui.common.JLinkButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnQuit.setText("Quit");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Data Warehouse Application");

        linkConnect.setText("1.  Connect to database");
        linkConnect.setFocusable(false);
        linkConnect.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        linkConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkConnectActionPerformed(evt);
            }
        });

        linkInitialize.setText("2.  Initialize transaction data");
        linkInitialize.setFocusable(false);
        linkInitialize.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        linkInitialize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkInitializeActionPerformed(evt);
            }
        });

        linkFactTable.setText("4.  Setup fact table");
        linkFactTable.setFocusable(false);
        linkFactTable.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        linkFactTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkFactTableActionPerformed(evt);
            }
        });

        linkDimensional.setText("3.  Select dimensional tables");
        linkDimensional.setFocusable(false);
        linkDimensional.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        linkDimensional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkDimensionalActionPerformed(evt);
            }
        });

        linkReview.setText("5.  Review operations");
        linkReview.setFocusable(false);
        linkReview.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        linkReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkReviewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(linkConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(linkInitialize, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(linkDimensional, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(linkFactTable, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(linkReview, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 57, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linkConnect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linkInitialize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linkDimensional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linkFactTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linkReview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(btnQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void linkConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkConnectActionPerformed
        ConnectPanel conPanel = new ConnectPanel(this._props, this._db);
        
        JOptionPane pane = new JOptionPane(conPanel,  
                JOptionPane.PLAIN_MESSAGE, 
                JOptionPane.OK_CANCEL_OPTION);
        
        JDialog dialog = pane.createDialog(null, "Connect to Database");
        
        // Show the dialog
        dialog.setVisible(true);
      
        // Handle the OK/Cancel buttons
        if(pane.getValue() != null) {
            // User clicked OK, Force a save on the settings
            conPanel.saveSettings();
                    
            // Double-check that we can connect
            if (this._db.connect()) {
                // Good, now close the connection
                this._db.disconnect();
                
                // Let the user know that everything is good
                this.linkConnect.setLinkColor(Color.GREEN);
            } else {
                // Could not connect
                Util.showErrorBox("Database Connection", "Failed to connect to the database!");
                this.linkConnect.setLinkColor(Color.RED);
            }
        }
    }//GEN-LAST:event_linkConnectActionPerformed

    private void linkDimensionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkDimensionalActionPerformed
        SelectTablePanel selectPanel = new SelectTablePanel(this._props, this._db, this._dw);
        
        JOptionPane pane = new JOptionPane(selectPanel,  
                JOptionPane.PLAIN_MESSAGE, 
                JOptionPane.OK_CANCEL_OPTION);
        
        JDialog dialog = pane.createDialog(null, "Select Dimensional Tables");
        
        // Show the dialog
        dialog.setVisible(true);
      
        // Handle the OK/Cancel button
        if(pane.getValue() != null) {
            // User clicked OK
            //
            // At this poine we want to save all the selected or created
            // dimension tables to the NewTables member of the Warehouse
            // object.  We also want to set the NewName of the tables
            // with a prefix of "DIM_" so that we can distinguish them
            // from existing tables
            ArrayList<SqlTable> tables = selectPanel.saveTables();
            
            // We need to go through and make sure any custom tables
            // have the prefixed name as well as those that were copied
            // directly from the original transactional tables
            for (SqlTable table : tables) {
                if (! table.isCustomTable()) {
                    table.setNewName(Constants.NewTablePrefix + table.getOriginalName());
                    table.setDimensionalTable(true);
                }
            }

            this._dw.getNewTables().addAll(tables);
        }
    }//GEN-LAST:event_linkDimensionalActionPerformed

    private void linkFactTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkFactTableActionPerformed
        FactTablePanel factPanel = new FactTablePanel(this._props, this._db, this._dw);
        
        JOptionPane pane = new JOptionPane(factPanel,  
                JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_CANCEL_OPTION);
        
        JDialog dialog = pane.createDialog(null, "Setup Fact Table");
        
        // Show the dialog
        dialog.setVisible(true);
      
        // Handle the OK/Cancel button
        if(pane.getValue() != null) {
            // User clicked OK
            this._dw.getFactTables().add(factPanel.saveTableDetails());
        }
    }//GEN-LAST:event_linkFactTableActionPerformed

    private void linkReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkReviewActionPerformed
        ReviewPanel reviewPanel = new ReviewPanel(this._props, this._db, this._dw);
        
        JOptionPane pane = new JOptionPane(reviewPanel,  
                JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_CANCEL_OPTION);
        
        JDialog dialog = pane.createDialog(null, "Review Operations");
        
        // Show the dialog
        dialog.setVisible(true);
      
        // Handle the OK/Cancel button
        if(pane.getValue() != null) {
            // User clicked OK, prompt the user to confirm execution
            int result = JOptionPane.showConfirmDialog(this, 
                        "Are you sure you want to execute the generated SQL for the star schema?", 
                        "Confirm Star Schema Generation", 
                        JOptionPane.YES_NO_OPTION);
                
            if (result == JOptionPane.YES_OPTION) {
                // Execute the SQL
                String sql = reviewPanel.getSQL();
                
                String [] statements = sql.split(";", -1);
                
                for (String statement : statements) {
                    ResultSet rs = this._db.executeQuery(statement);

                    try {
                        rs.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(Launcher.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }            
        }
    }//GEN-LAST:event_linkReviewActionPerformed

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnQuitActionPerformed

    private void linkInitializeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkInitializeActionPerformed
        InitializePanel initPanel = new InitializePanel();
        
        JOptionPane pane = new JOptionPane(initPanel,  
                JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_CANCEL_OPTION);
        
        JDialog dialog = pane.createDialog(null, "Initialize Transaction Data");
        
        // Show the dialog
        dialog.setVisible(true);
      
        // Handle the OK/Cancel buttons
        if(pane.getValue() != null) {
            // User clicked OK
            String sql = initPanel.getSQL();
            
            if (! sql.isEmpty()) {
                int result = JOptionPane.showConfirmDialog(this, 
                        "Are you sure you want to initilize the database?", 
                        "Confirm Database Initialization", 
                        JOptionPane.YES_NO_OPTION);
                
                if (result == JOptionPane.YES_OPTION) {
                    sql = Util.cleanString(sql);
                    
                    String [] statements = sql.split(";", -1);
                    
                    // Execute the query statements
                    for (String statement : statements) {
                        String first = statement.substring(0, 2).trim();
                        if (! first.contains("-")) {
                            ResultSet rs = this._db.executeQuery(statement); 
                            try {
                                rs.close();
                            } catch (SQLException ex) {
                                Logger.getLogger(Launcher.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                    
                    this.linkInitialize.setLinkColor(Color.GREEN);
                }
            }
        }
    }//GEN-LAST:event_linkInitializeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQuit;
    private javax.swing.JLabel jLabel1;
    private com.jetsonfuzz.java.gui.common.JLinkButton linkConnect;
    private com.jetsonfuzz.java.gui.common.JLinkButton linkDimensional;
    private com.jetsonfuzz.java.gui.common.JLinkButton linkFactTable;
    private com.jetsonfuzz.java.gui.common.JLinkButton linkInitialize;
    private com.jetsonfuzz.java.gui.common.JLinkButton linkReview;
    // End of variables declaration//GEN-END:variables
}
